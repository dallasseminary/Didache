@model List<Unit>

@{
	ViewBag.Title = "Outline";
}

<style>
.unit-tasks {
	margin: 0 0 10px 10px;
}
.unit-header {
	background: darkblue;
	padding: 5px;
}

.drag-handle {
	width: 20px; 
	height: 20px;
	background: red;
	display: inline-block;

}
#course-units, #course-units ol {
	list-style-type: decimal;
}
#course-units li {
	list-style-type: decimal;
	margin: 0 0 0 20px;
}
</style>

<h2>Outline</h2>

<ol id="course-units" data-courseid="@ViewBag.Course.CourseID">
	@foreach (Unit unit in Model) {
	<li class="course-unit" data-unitid="@unit.UnitID">
		<div class="unit-header">
			<span class="unit-drag-handle drag-handle"></span>
			<input type="checkbox" class="unit-active" @(unit.IsActive ? "checked=\"checked\"" : "") />
			<input type="text" class="unit-name" value="@unit.Name" />

			<input type="date" class="unit-start-date" value="@unit.StartDate.ToString("MM/dd/yyyy")" />
			<input type="date" class="unit-start-end" value="@unit.EndDate.ToString("MM/dd/yyyy")" />

			<a class="unit-edit" href="/admin/courses/unit/@unit.UnitID">Edit Unit</a>
		</div>

		<ol class="course-tasks">
		@foreach (Task task in unit.Tasks) {
			<li class="course-task" data-taskid="@task.TaskID">
				<span class="task-drag-handle drag-handle"></span>
				<input type="checkbox" class="task-active" @(task.IsActive ? "checked=\"checked\"" : "") />
				<input type="text" class="task-name" value="@task.Name" />
	
				<input type="date" class="task-due-date" value="@(task.DueDate.HasValue ? task.DueDate.Value.ToString("MM/dd/yyyy") : "")" />


				<a class="task-edit" href="/admin/courses/task/@task.TaskID">Edit Task</a>
			</li>
		  }		
		</ol>
	</li>
 }

</ol>


<script>

	// save tasks
$('.course-task input').change(function () {
	var el = $(this),
		div = el.closest('.course-task'),
		task = {
			taskid: div.data('taskid'),
			name: div.find('.task-name').val(),
			duedate: div.find('.task-due-date').val(),
		};

	$.ajax({
		url: '/admin/courses/UpdateTask/' + task.taskid,
		data: JSON.stringify( task ),
		type: 'POST',
		success: function (d) {
			if (d.success) {
				console.log('saved task');
				el.effect("highlight");
			} else {
				console.log('error' + d.error)
			}
		},
		error: function (d) {
			console.log('error saving task')
		}
	});
});


// sort units
$('#course-units').sortable('destroy').sortable({
	handle: '.unit-drag-handle',
	axis: 'y',
	update: function (event, ui) {
		startSaveOrder();
	},
	start: cancelSaveOrder
});//.disableSelection();

// sort tasks
$('.course-tasks').sortable('destroy').sortable({
	handle: '.task-drag-handle',
	axis: 'y',
	update: function (event, ui) {
		startSaveOrder();
	},
	start: cancelSaveOrder
});//.disableSelection();


var saveTimeout = null;
function startSaveOrder() {
	cancelSaveOrder();
	saveTimeout = setTimeout(saveOrderChanges, 1000);
}
function cancelSaveOrder() {
	if (saveTimeout != null) {
		clearTimeout(saveTimeout);
		delete saveTimeout;
		saveTimeout = null;
	}
}

function saveOrderChanges() {

	cancelSaveOrder();

	var unitArray = [],
			unit,
			task;

	$('.course-unit').each(function (unitSortOrder, unitElement) {

		// store the position of the group
		unit = {
			unitid: parseInt($(unitElement).data('unitid'), 10),
			//name: $(unitElement).find('.unit-name').val(),
			sortorder: unitSortOrder + 1,
			tasks: []
		};
		unitArray.push(unit);

		$(unitElement).find('.course-task').each(function (taskSortOrder, taskElement) {

			task = {
				unitid: unit.unitid,
				taskid: parseInt($(taskElement).data('taskid'), 10),
				//name: $(taskElement).find('.task-name').val(),
				sortorder: taskSortOrder + 1
			};

			// store the position of the file
			unit.tasks.push(task);

		});
	});

	// save the group order
	console.log('group order', unitArray);
	console.log(JSON.stringify({ units: unitArray }));

	$.ajax({
		url: '/admin/courses/UpdateUnitSorting/@ViewBag.Course.CourseID',
		data: JSON.stringify(unitArray),
		type: 'POST',
		//dataType: 'json',
		success: function (d) {
			if (d.success) {
				console.log('saved order')
			} else {
				console.log('error' + d.error)
			}
		}
		,
		error: function (d) {
			console.log('error saving order')
		}
	});
}



</script>