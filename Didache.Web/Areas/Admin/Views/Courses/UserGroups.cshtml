@model Course

@{
    ViewBag.Title = Model.ToString() + " Users";
}

@section head {
	<script src="/js/admin/courses-common.js"></script>
	<script src="/js/admin/courses-data.js"></script>
	<script src="/js/admin/courses-usergroups.js"></script>
}

@*
x load/display
x add groups
x edit popup / edit inline
- move students around
- add students
- add graders, builders, students, and faculty
*@

<div class="page-wide">
	<div class="full-column">

@Html.Partial("_CourseHeader", Model)

	@*
	<div class="nested-sub">
		<h3>Find Users</h3>

		<input type="text" id="user-search-text" /><input type="button" id="user-search-button" value="Search" />
	</div>
	*@


	<input type="hidden" id="CourseID" name="CourseID" value="@(Model != null ? Model.CourseID : 0)" />
	
	<button type="button" class="d-button action" id="add-user-group">Add User Group</button>

	<div id="course-user-groups" class="nested-list"></div>

	</div>
</div>



<div id="user-group-editor" class="item-editor">
	
	<input type="hidden" name="GroupID" />
	<input type="hidden" name="CourseID" />

    <table class="admin-form">
      <tbody>
		<tr>
			<th>
				Name
			</th>
			<td>
				<input type="text" name="Name" />
			</td>
		</tr>
		<tr>
			<th>
				Facilitator
			</th>
			<td>
				<select name="FacilitatorUserID">
					<option value="0">-- None --</option>
				@foreach (CourseUser courseUser in (new DidacheDb()).CourseUsers.Where(cu => cu.CourseID == Model.CourseID && cu.RoleID == (int)CourseUserRole.Faciliator).ToList()) {
					<option value="@courseUser.UserID">@courseUser.User.FormattedName</option>
				}
				</select>
			</td>
		</tr>	
		</tbody>
	</table>

</div>