@model Didache.Task

@{
	Layout = "DialogLayout.cshtml";
	ViewBag.Title = "Edit Task";
}

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

	

        @Html.HiddenFor(model => model.TaskID)
		@Html.HiddenFor(model => model.UnitID)
		@Html.HiddenFor(model => model.CourseID)
		@Html.HiddenFor(model => model.SortOrder)	
	
    <table class="admin-form">
      <tbody>
	<tr>

        <th>
            @Html.LabelFor(model => model.IsActive):
        </th>
        <td>
            @Html.EditorFor(model => model.IsActive)
            @Html.ValidationMessageFor(model => model.IsActive)
        </td>
	</tr>
	<tr>
        <th>
            @Html.LabelFor(model => model.Name):
        </th>
        <td>
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </td>
	</tr>

		<tr>
        <th>
            @Html.LabelFor(model => model.TaskTypeName):
        </th>
        <td>
			@foreach (Didache.TaskTypes.TaskTypeInfo info in Didache.TaskTypes.TaskTypeManager.GetTaskTypes()) {
				@Html.Raw(String.Format("<input type=\"radio\" value=\"{0}\" name=\"{1}\" id=\"{2}\"{4}><label for=\"{2}\">{3}</label>",
						info.ClassName, 
						"TaskTypeName", 
						"TaskTypeName-" + info.FriendlyName, 
						info.FriendlyName,
						info.ClassName == Model.TaskTypeName ? " checked=\"checked\"" : ""))
				<br />
			}
        </td>

	</tr>

	<tr>


        <th>
            @Html.LabelFor(model => model.Instructions):
        </th>
        <td>
            @Html.EditorFor(model => model.Instructions)
            @Html.ValidationMessageFor(model => model.Instructions)
        </td>
	</tr>
	<tr>
        <th>
            @Html.LabelFor(model => model.Description):
        </th>
        <td>
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </td>
	</tr>
	<tr>
        <th>
            @Html.LabelFor(model => model.Priority):
        </th>
        <td>
            @Html.EditorFor(model => model.Priority)
            @Html.ValidationMessageFor(model => model.Priority)
        </td>
	</tr>
	<tr>
        <th>
            @Html.LabelFor(model => model.DueDate):
        </th>
        <td>
            @Html.EditorFor(model => model.DueDate, new{@type="date",@class="date"})
            @Html.ValidationMessageFor(model => model.DueDate)
        </td>
	</tr>
	<tr>
        <th>
            @Html.LabelFor(model => model.InstructionsAvailableDate):
        </th>
        <td>
            @Html.EditorFor(model => model.InstructionsAvailableDate)
            @Html.ValidationMessageFor(model => model.InstructionsAvailableDate)
        </td>
	</tr>
	<tr>
        <th>
            @Html.LabelFor(model => model.SubmissionAvailableDate):
        </th>
        <td>
            @Html.EditorFor(model => model.SubmissionAvailableDate)
            @Html.ValidationMessageFor(model => model.SubmissionAvailableDate)
        </td>
	</tr>
	<tr>
        <th>
            @Html.LabelFor(model => model.IsSkippable):
        </th>
        <td>
            @Html.EditorFor(model => model.IsSkippable)
            @Html.ValidationMessageFor(model => model.IsSkippable)
        </td>
		</tr>
		</tbody>
	</table>


        <div class="submit">
            <input type="submit" value="Save" />
        </div>
    
}
