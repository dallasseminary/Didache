@model Course 

@{
    ViewBag.Title = "Files";
}
@section head {
	<script src="/js/jquery.fileupload.js"></script>
	<script src="/js/admin/courses-common.js"></script>
	<script src="/js/admin/courses-data.js"></script>
	<script src="/js/admin/courses-files.js"></script>
}
<!--	
x display files
x save data
- upload files to group
- sort files
x sort groups
x add group
- find files from other people
- rename groups
- delete groups
- remove files
-->

<div class="page-wide">
	<div class="full-column">

@Html.Partial("_CourseHeader", Model)

<input type="hidden" id="CourseID" name="CourseID" value="@(Model != null ? Model.CourseID : 0)" />

<button type="button" class="d-button action" id="add-file-group">Add File Group</button>

<div id="course-file-groups" class="nested-list">

</div>


<div id="file-group-editor" class="item-editor">
	
	<input type="hidden" name="GroupID" />
	<input type="hidden" name="CourseID" />

    <table class="admin-form">
      <tbody>
		<tr>
			<th>
				Active
			</th>
			<td>
				<input type="checkbox" name="IsActive" />
			</td>
		</tr>
		<tr>
			<th>
				Name
			</th>
			<td>
				<input type="text" name="Name" />
			</td>
		</tr>	
		</tbody>
	</table>
</div>


@*
<div id="filegroups" class="nested-list" data-courseid="@Model.CourseID">
@foreach(CourseFileGroup group in ViewBag.CourseFileGroups) {
	

	<div class="filegroup nested-item" data-groupid="@group.GroupID" class="">
		
		<div class="nested-item-row">
			<span class="group-handle drag-handle"></span>
            <span class="filegroup"><img src="/css/images/icons/filegroup.png"></span>
			<input class="group-name" value="@group.Name" />

			<a class="filegroup-edit edit-link" href="/admin/courses/filegroup/@group.GroupID">Edit</a>
			<a class="filegroup-delete delete-link" href="/admin/courses/deletefilegroup/@group.GroupID">Delete</a>
		</div>

		<div class="upload">
			<form action="/admin/courses/fileupload/@group.CourseID/" enctype="multipart/form-data" method="post">
				<input type="file" name="file" multiple>
				<button>Upload</button>
				<div>Click or drag and drop files</div>			
			</form>
		</div>
		
		<div class="files nested-child-list">
		@foreach (CourseFileAssociation cfa in group.CourseFileAssociations) {
			<div class="coursefile nested-child-item" data-fileid="@cfa.FileID">
				<span class="file-handle drag-handle"></span>
				
                <span class="filetype"><img src="/css/images/@(cfa.CourseFile.FileType).png"></span>
				<span class="file-title">@cfa.CourseFile.Title</span>
				<span class="file-user">@(cfa.CourseFile.User != null ? cfa.CourseFile.User.FullName : cfa.CourseFile.UserID.ToString())</span>
				
				<a class="file-edit edit-link" href="/admin/courses/file/@cfa.FileID">Edit</a>
				<a class="file-delete delete-link" href="/admin/courses/deletefile/@cfa.FileID">Delete</a>
			</div>
		}	
		</div>
		
		
	</div>		
}
</div>

<script>
	$(function () {



		
		// add group
		$('#new-file-group-button').click(function () {

			var  
				name = $('#new-file-group-name').val(),
				courseid = $('#filegroups').data('courseid');

			$.ajax({
				url: '/admin/courses/AddFileGroup/' + courseid,
				data: JSON.stringify({ name: name }),
				type: 'POST',
				//dataType: 'json',
				success: function (d) {

					console.log('success',d);

					var newFileArea = $(
						'<div class="filegroup" data-groupid="' + d.groupid + '">' +
							'<span class="group-handle drag-handle"></span>' +
							'<input class="group-name" value="' + d.name + '" />' +
							'<div class="upload"><form action="/admin/courses/fileupload/' + d.courseid + '/" enctype="multipart/form-data" method="post">' +
								'<input type="file" name="file" multiple>' +
								'<button>Upload</button>' +
								'<div>Click or drag and drop files</div>' +
							'</form></div>' +
							'<div class="files"></div>' +
						'</div>'
					);

					$('#filegroups').append(newFileArea);

					setupFiles(newFileArea.find('form'));
					setupDragAndDrop();
				},
				error: function (a,b,c) {
					console.log('error',a,b,c);
				}
			});

		});


		setupDragAndDrop();
		setupFiles('.upload form');

	});



function setupDragAndDrop() {

	// sort the file groups

	$('#filegroups').sortable('destroy').sortable({
		handle: '.group-handle',
		update: function (event, ui) {
			startSaveOrder();
		},
		start: cancelSaveOrder
	}).disableSelection();

	// sort the files
	$('.files').sortable('destroy').sortable({
		connectWith: '.files',
		handle: '.file-handle',
		update: function (event, ui) {
			startSaveOrder();
		},
		start: cancelSaveOrder
	}).disableSelection();

	// handle group name changes
	$('.group-name')
				.keydown(function () {
					cancelSaveOrder();
				})
				.keyup(function () {
					startSaveOrder();
				});
}
function setupFiles(selector) {

	// setup upload
	$(selector).fileUpload({
		formData: {
		},
		initUpload: function (event, files, index, xhr, handler, callback) {

			// from the file input go up to the top element
			var groupid = $(event.target).closest('.filegroup').data('groupid');

			handler.formData = { groupid: groupid }; // JSON.stringify({ groupid: groupid });

			console.log(groupid, files[index].name);

			callback();
		},
		onProgress: function (event, files, index, xhr, handler) {
			var percent = parseInt(event.loaded / event.total * 100, 10);

			/*
			handler
			.report
			.find('progress')
			.attr('value', percent);
			*/
		},
		// when the upload completes
		onLoad: function (event, files, index, xhr, handler) {
			var json = parseResponse(xhr);

			console.log(json);

			// create node
			var node = $('<div class="coursefile" data-fileid="' + json.fileid + '">' +
						'<span class="file-handle drag-handle"></span>' +
						'<span class="file-title">' + json.title + '</span>' +
						'<span class="file-name">' + json.filename + '</span>' +
						'<span class="file-user">' + json.user + '</span>' +
					'</div>');

			// from the file input go up to the top element
			$(handler.dropZone).closest('.filegroup').find('.files').append(node);

		},
		onError: function (event, files, index, xhr, handler) {
			// For JSON parsing errors, the load event is saved as handler.originalEvent:
			if (handler.originalEvent) {
				/* handle JSON parsing errors ... */
			} else {
				/* handle XHR upload errors ... */
			}
		}
	});

} // setupDragAndDrop

	function parseResponse(xhr) {
		if (typeof xhr.responseText != 'undefined') {
			return $.parseJSON(xhr.responseText);
		} else {
			// Instead of an XHR object, an iframe is used for legacy browsers:
			return $.parseJSON(xhr.contents().text());
		}
	}


	var saveTimeout = null;
	function startSaveOrder() {
		cancelSaveOrder();
		saveTimeout = setTimeout(saveOrderChanges, 1000);
	}
	function cancelSaveOrder() {
		if (saveTimeout != null) {
			clearTimeout(saveTimeout);
			delete saveTimeout;
			saveTimeout = null;
		}
	}

	function saveOrderChanges() {

		cancelSaveOrder();
		
		var fileGroupArray = [],
			group,
			file;

		$('.filegroup').each(function (groupSortOrder, groupElement) {

			// store the position of the group
			group = {
				groupid: parseInt($(groupElement).data('groupid'), 10),
				name: $(groupElement).find('.group-name').val(),
				sortorder: groupSortOrder + 1,
				files: []
			};
			fileGroupArray.push(group);

			$(groupElement).find('.coursefile').each(function (fileSortOrder, fileElement) {

				file = {
					groupid: group.groupid,
					fileid: parseInt($(fileElement).data('fileid'), 10),
					sortorder: fileSortOrder + 1
				};

				// store the position of the file
				group.files.push(file);

			});
		});

		// save the group order
		console.log('group order', fileGroupArray);
		console.log(JSON.stringify({ groups: fileGroupArray }));

		$.ajax({
			url: '/admin/courses/UpdateFileSorting/@Model.CourseID',
			data: JSON.stringify(fileGroupArray),
			//data: fileGroupArray,
			type: 'POST',
			complete: function(d) {

			}
		});
	}


	</script>

</div>
*@

</div></div>