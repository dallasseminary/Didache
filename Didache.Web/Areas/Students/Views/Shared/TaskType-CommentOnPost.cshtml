@model Didache.UserTaskData

@{
	List<InteractionThread> threads = Interactions.GetInteractionThreads(Model.TaskID);
}

@if (threads.Count > 0) {
<div class="task-interactions">

@foreach (InteractionThread thread in threads) {
	<div class="task-interaction-thread" id="thread-@thread.ThreadID" data-threadid="@thread.ThreadID">
		
		<div class="task-interaction-main">
			<div class="task-interaction-userimage">
				<a href="@(thread.User != null ? thread.User.ProfileDisplayUrl : "#")">
					<img src="@(thread.User != null ? thread.User.GetProfileImageUrl(40, 40) : "")" alt="@(thread.User != null ? thread.User.SecureName : "#")"
				</a>				
			</div>	
			<div class="task-interaction-content">			
				<div class="task-interaction-meta">
					<a class="user-name" href="@(thread.User != null ? thread.User.ProfileDisplayUrl : "#")">@(thread.User != null ? thread.User.SecureName : "missing")</a>
					<span class="post-date">@thread.ThreadDate.ToShortDateString()</span>
					<span class="total-replies d-button">@String.Format(Resources.labels.interactions_replies, (thread.Posts.Count - 1))</span>
				</div>
				<div class="task-interaction-text">
					@Html.Raw(thread.Posts.First().PostContentFormatted)

					@if (thread.Posts.First().FileID > 0) {	
					<div class="post-file">
						File: <a href="@thread.Posts.First().File.FileUrl">@thread.Posts.First().File.Filename</a>
					</div>
					}
				</div>		

			</div>
		</div>

		<div class="task-interaction-list">
			
			@foreach (InteractionPost post in thread.Posts.Skip(1)) {
				<div class="task-interaction-post @(post.UserID == thread.UserID ? " thread-starter" : "")" id="post-@post.PostID">
					<div class="task-interaction-userimage">
						<a href="@(post.User != null ? post.User.ProfileDisplayUrl : "#")">
							<img src="@(post.User != null ? post.User.GetProfileImageUrl(30, 30) : "")" alt="@(post.User != null ? post.User.SecureName : "#")" />
						</a>				
					</div>	
					<div class="task-interaction-content">			
						<div class="task-interaction-meta">
							<a class="user-name" href="@(post.User != null ? post.User.ProfileDisplayUrl : "#")">@(post.User != null ? post.User.SecureName : "missing")</a>
							<span class="post-date">@post.PostDate.ToShortDateString()</span>						
						</div>
						<div class="task-interaction-text">
							@Html.Raw(post.PostContentFormatted)
						</div>
					</div>
				</div>	
	  	  
   }

			@{ User user = Users.GetLoggedInUser(); }
			<div class="add-reply task-interaction-post">
				<div class="task-interaction-userimage">
					<a href="@user.ProfileDisplayUrl">
						<img src="@user.GetProfileImageUrl(30, 30)" alt="@user.SecureName" />
					</a>				
				</div>	
				<div class="task-interaction-content">			
					<div class="task-interaction-meta">
						<a class="user-name" href="@user.ProfileDisplayUrl">@user.SecureName</a>
					</div>
					<div class="task-interaction-text">
						<textarea class="reply-text"></textarea>	
						<div class="add-reply-button">
							<input type="button" class="d-button action reply-button" value="Add reply" /> 
							<input type="button" class="d-button collapse" value="Close" />
						</div>
					</div>
				</div>
			</div>	
	  
		</div>

	</div>
}
</div>
}
else {

	<p>No files to comment on yet! Check back here soon</p>

}
