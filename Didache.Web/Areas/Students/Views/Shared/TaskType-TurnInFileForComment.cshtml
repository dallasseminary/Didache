@model Didache.UserTaskData


@if (Model.TaskCompletionStatus == TaskCompletionStatus.NotStarted
	|| (
			Model.TaskCompletionStatus == TaskCompletionStatus.Completed &&
			(!Model.Task.DueDate.HasValue || DateTime.Now < Model.Task.DueDate.Value) &&
			Interactions.GetActiveReplyCount(Model.PostID) <= 1
		)
	) {

	if (Model.TaskCompletionStatus == TaskCompletionStatus.Completed) {
		<div class="message-warning">
		@Didache.Resources.labels.studentschedule_resubmitfile_message
		</div>
	}
	
	<div class="turn-in-form">
	<form method="post" enctype="multipart/form-data" action="/courses/api/taskfile/@Model.TaskID" id="task-submit-@Model.TaskID">
		<textarea name="usercomment"></textarea>

		<input type="file" name="StudentFile" class="file-input required" @Html.Raw(!String.IsNullOrEmpty(Model.Task.FileTypesAllowed) ? " accept=\"" + Model.Task.FileTypesAllowed + "\"" : "") data-val-accept="Sorry, accept files with these extensions: @Model.Task.FileTypesAllowed." />
		
		<input type="submit" value="@Didache.Resources.labels.studentschedule_submitfordiscussion" class="d-button action task-submit" />

	</form>
	
	@if (!String.IsNullOrEmpty(Model.Task.FileTypesAllowed)) {
	 <p>@Didache.Resources.labels.studentschedule_chooseafiletype @Model.Task.FileTypesAllowed.Replace("|", ", ")</p>
 }
	</div>

	<!--
	if (Model.Task.IsSkippable) {
		<input type="submit" name="TaskStatus" value="Skipped"  />
	}
	-->	

} else {
		<div class="message-warning">
		@Didache.Resources.labels.studentschedule_resubmitfile_contactfacilitator
		</div>
}